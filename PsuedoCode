Class UserInfo.h
START
//Setters
void setUserName(){}
void setPassword(){}
void setFirstName(){}
void setLastName(){}
void setEmail(){}
void createID(){}
//Getters
string getsetUserName(){}
int getPassword(){}
string getFirstName()
string getLastName(){}
string getEmail(){}
//variables
string userName;
int password;
string firstName;
string lastName;
string email;
END

UserInfo.cpp
START
void setUserName(newUserName) {
set the use name to newUserName
}
void setPassword(newPassword) {
set password to newPassword
}
void setFirstName(newFirstName) {
set firstName to newFirstName
}
void setLastName(newLastName) {
set lastName to newLastName
}
void setEmail(newEmail) {
set email to newEmail
}
string getsetUserName(){
return username
}
int getPassword(){
return password
}
string getFirstName(){
return first name
}
string getLastName(){
return last name
}
string getEmail(){
return email
}
void createID(){
random ID assigned to user when account is created. used as the key for dictionary
}
END

Class UserInteraction.h
START
void setFileName(string newFileName, userID) {
    create a file name and add the users ID in the file
}
string getFileName (){
retrieve file name
}
void createNote() {}
void writeNote(string fileName) {}
void readNote(string fileName) {}
void deleteNote(string fileName) {}
bool findFile(){}
END

UserInteraction.cpp
START
void setFileName(string newFileName, userID) {
    create a file name and add the users ID in the file
}
bool findFile(userEmail, userPassword) {
will look through a file system to find the users notes
}
string getFileName (){
retrieve file name
}
void createNote() {
call findFile()
create a .txt file for the user to use. This .txt file will be linked to them by
using their ID created for them when they create an account
}
void writeNote(string fileName) {
call findFile()
will find the users file, display all their notes, and allow them choose which note they would like to
edit
}
void readNote(string fileName) {
call findFile()
will allow the user to view all their notes and read them
}
void deleteNote(string fileName) {
call findFile()
allows for the user to delete any note that they wish
}
END

main.cpp
START
int main() {
bool exit = true
    while exit == true {
        print("Please enter your login info to exit program enter 5")
        check = findFile();
        IF check is = true
            CALL userMenu
        IF userinput is 5
            exit is = false
        ELSE
            CALL createUser
    }

}


int userMenu() {
print(enter a 1 to view notes, enter a 2 to edit a note, enter a 3 to delete a note)
return user input
IF 1
    CALL view note
IFELSE
    CALL editNote
IFELSE
    CALL deleteNote
ELSE
    print("Wrong input try again")
    CALL userMenu();
}

void createUser() {
CIN get information for new user
CALL Person constructor to create person
ADD person to dictionary
CALL createID
}